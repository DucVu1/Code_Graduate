module reg_out #(
  parameter WIDTH   = 32,
  parameter O_WIDTH = 128
)(
  input  logic                 i_clk,
  input  logic                 i_reset,
  input  logic [WIDTH - 1:0]   i_word1,
  input  logic [WIDTH - 1:0]   i_word2,
  output logic [O_WIDTH - 1:0] o_word,
  output logic                 o_count
);

logic [WIDTH-1:0] reg_array [3:0];
logic [1:0]       word_count;   
logic             cout_r;

  always_comb begin
    o_word  = {reg_array[3], reg_array[2], reg_array[1], reg_array[0]};
    o_count = cout_r;
  end


always_ff @(posedge i_clk or negedge i_reset) begin
if (~i_reset) begin
    reg_array[0] <= '0;
    reg_array[1] <= '0;
    reg_array[2] <= '0;
    reg_array[3] <= '0;
    word_count   <= 0;
    cout_r       <= 0;
end else begin
    reg_array[3] <= reg_array[1];
    reg_array[2] <= reg_array[0];
    reg_array[1] <= i_word2;
    reg_array[0] <= i_word1;

    if (word_count < 2) begin
     word_count <= word_count + 1;
     cout_r <= 0;
    end else begin
     word_count <= 0;
     cout_r <= 1;
    end
end
end

endmodule
